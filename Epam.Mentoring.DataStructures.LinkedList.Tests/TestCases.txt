1. Add item with default struct value to an empty list using "Add" method.
   Steps:
   - Create empty list of type Int32;
   - Call "Add" method with parameter value = default(int);
   Expected result: list of 1 element with "Item" property value = 0.

2. Add item with default class value to an empty list using "Add" method.
   Steps:
   - Create empty list of type String;
   - Call "Add" method with parameter value = default(string);
   Expected result: list of 1 element with "Item" property value = null.

3. Add item with default struct value to a not empty list using "Add" method.
   Steps:
   - Create empty list of type Int32;
   - Add one element with "Item" value = 1 using "Add" method;
   - Call "Add" method with parameter value = default(int);
   Expected result: list of 2 element, second element "Item" property value = 0.

4. Add item with default class value to a not empty list using "Add" method.
   Steps:
   - Create empty list of type String;
   - Add one element with "Item" value = "1" using "Add" method;
   - Call "Add" method with parameter value = default(string);
   Expected result: list of 2 element, second element "Item" property value = null.

5. Add item to an empty list using "Add" method.
   Steps:
   - Create empty list of type Int32;
   - Call "Add" method with parameter value = 1;
   Expected result: list of 1 element with "Item" property value = 1.

6. Add item to not empty list using "Add" method.
   Steps:
   - Create empty list of type Int32;
   - Add one element with "Item" value = 1 using "Add" method;
   - Call "Add" method with parameter value = 2;
   Expected result: list of 2 elements, second element "Item" property value = 1.

7. Add item with default struct value at position 0 of an empty list using "AddAt" method.
   Steps:
   - Create empty list of type Int32;
   - Call "AddAt" method with parameters values = default(int) and 0 respectively;
   Expected result: list of 1 element with "Item" property value = 0.

8. Add item with default class value at position 0 of an empty list using "AddAt" method.
   Steps:
   - Create empty list of type String;
   - Call "AddAt" method with parameters values = default(string) and 0 respectively;
   Expected result: list of 1 element with "Item" property value = null.

9. Add item with default struct value at position 0 of a not empty list using "AddAt" method.
   Steps:
   - Create empty list of type Int32;
   - Add one element with "Item" value = 1 using "Add" method;
   - Call "AddAt" method with parameters values = default(int) and 0 respectively;
   Expected result: list of 2 elements, first element "Item" property value = 0.

10. Add item with default class value at position 0 of a not empty list using "AddAt" method.
   Steps:
   - Create empty list of type String;
   - Add one element with "Item" value = "1" using "Add" method;
   - Call "AddAt" method with parameters values = default(string) and 0 respectively;
   Expected result: list of 2 elements, first element "Item" property value = null.

11. Add item at position 0 of an empty list using "AddAt" method.
   Steps:
   - Create empty list of type Int32;
   - Call "AddAt" method with parameters values = 1 and 0 respectively;
   Expected result: list of 1 element with "Item" property value = 1.

12. Add item at position 1 of a list of 3 elements using "AddAt" method.
   Steps:
   - Create empty list of type Int32;
   - Add values 1, 2, 3 sequentially using "Add" method;
   - Call "AddAt" method with parameters values = 4 and 1 respectively;
   Expected result: list of 4 elements with "Item" property value of the second element = 4.

13. Add item at position 1 of an empty list using "AddAt" method.
   Steps:
   - Create empty list of type Int32;
   - Call "AddAt" method with parameters values = (3, 1);
   Expected result: ArgumentOutOfRangeException is thrown.

14. Add item at position 2 of a list with 1 element using "AddAt" method.
   Steps:
   - Create empty list of type Int32;
   - Add one element with "Item" value = 1 using "Add" method;
   - Call "AddAt" method with parameters values = (2, 2);
   Expected result: ArgumentOutOfRangeException is thrown.

15. Add item at position 1 of a list of 1 element using "AddAt" method.
   Steps:
   - Create empty list of type Int32;
   - Add one element with "Item" value = 1 using "Add" method;
   - Call "AddAt" method with parameters values = (2, 1);
   Expected result: list of 2 elements with "Item" property value of the second element = 2.

16. Add item at position 0 of a list of 1 element using "AddAt" method.
    Steps:
   - Create empty list of type Int32;
   - Add one element with "Item" value = 1 using "Add" method;
   - Call "AddAt" method with parameters values = (2, 0);
   Expected result: list of 2 elements with "Item" property value of the second element = 1.

17. Add item at position with negative value to an empty list using "AddAt" method.
    Steps:
   - Create empty list of type Int32;
   - Call "AddAt" method with parameters values = (1, -2);
   Expected result: ArgumentOutOfRangeException is thrown.

18. Add item at position with value greather than list size to a list using "AddAt" method.
    Steps:
   - Create empty list of type Int32;
   - Call "AddAt" method with parameters values = (1, 1);
   Expected result: ArgumentOutOfRangeException is thrown.
 
19. Remove first item from a not empty list using "Remove" method.
   Steps:
   - Create empty list of type Int32;
   - Add values 1, 2, 1 sequentially using "Add" method;
   - Call "Remove" method with parameter value = 1;
   Expected result: list of 2 elements, first element value = 2.

20. Remove item from a not empty list using "Remove" method.
   Steps:
   - Create empty list of type Int32;
   - Add one element with "Item" value = 1 using "Add" method;
   - Call "Remove" method with parameter value = 1;
   Expected result: empty list.

21. Remove item from an empty list using "Remove" method.
   Steps:
   - Create empty list of type Int32;
   - Call "Remove" method with parameter value = 1;
   Expected result: empty list.

22. Remove item from a not empty list without matches using "Remove" method.
   Steps:
   - Create empty list of type Int32;
   - Add values 2, 3 sequentially using "Add" method;
   - Call "Remove" method with parameter value = 1;
   Expected result: list of 2 elements.

23. Remove item at position with negative value from not empty list using "RemoveAt" method.
   Steps:
   - Create empty list of type Int32;
   - Add one element with "Item" value = 1 using "Add" method;
   - Call "RemoveAt" method with parameter value = -1;
   Expected result: ArgumentOutOfRangeException is thrown.

24. Remove item at position >= list size from a not empty list using "RemoveAt" method.
   Steps:
   - Create empty list of type Int32;
   - Add one element with "Item" value = 1 using "Add" method;
   - Call "RemoveAt" method with parameter value = 1;
   Expected result: ArgumentOutOfRangeException is thrown.

25. Remove the only item from a list of 1 element using "RemoveAt" method.
   Steps:
   - Create empty list of type Int32;
   - Add one element with "Item" value = 1 using "Add" method;
   - Call "RemoveAt" method with parameter value = 0;
   Expected result: empty list.

26. Remove item in the middle of a not empty list using "RemoveAt" method.
   Steps:
   - Create empty list of type string;
   - Add items with values 1, 2, 3 sequentially using "Add" method;
   - Call "RemoveAt" method with parameter value = 1;
   Expected result: list of 2 elements, element at position 2 shifted to position 1.

27. Remove item in the middle of a not empty list using "RemoveAt" method.
   Steps:
   - Create empty list of type string;
   - Add items with values 1, 2, 3 sequentially using "Add" method;
   - Call "RemoveAt" method with parameter value = 1;
   - Add one element with "Item" value = 4 using "Add" method;
   Expected result: list of 3 elements, element at position 2 shifted to position 1, last element added to position 3.

28. Remove first item from a list with more than 2 elements using "RemoveAt" method.
   Steps:
   - Create empty list of type string;
   - Add items with values 1, 2 sequentially using "Add" method;
   - Call "RemoveAt" method with parameter value = 0;
   Expected result: list of 1 element, element at position 1 shifted to position 0.

29. Get first item from a list of 1 element using "ElementAt" method.
   Steps:
   - Create empty list of type Int32;
   - Add item with value = 1 using "Add" method;
   - Call "ElementAt" method with parameter value = 0;
   Expected result: value of 1.

30. Get first item from a list of 2 elements using "ElementAt" method.
   Steps:
   - Create empty list of type Int32;
   - Add items with values 1, 2 sequentially using "Add" method;
   - Call "ElementAt" method with parameter value = 0;
   Expected result: value of 1.

31. Get last item from a list of 2 elements using "ElementAt" method.
   Steps:
   - Create empty list of type Int32;
   - Add items with values 1, 2 sequentially using "Add" method;
   - Call "ElementAt" method with parameter value = 1;
   Expected result: value of 2.

32. Get item at any position from an empty list using "ElementAt" method.
   Steps:
   - Create empty list of type Int32;
   - Call "ElementAt" method with parameter value = 0;
   Expected result: InvalidOperationException is thrown.

33. Get item at negative position from a not empty list using "ElementAt" method.
   Steps:
   - Create empty list of type Int32;
   - Add item with value 1 using "Add" method;
   - Call "ElementAt" method with parameter value = -1;
   Expected result: ArgumentOutOfRangeException is thrown.

34. Get item at position >= list size from a list using "ElementAt" method.
   Steps:
   - Create empty list of type Int32;
   - Add item with value 1 using "Add" method;
   - Call "ElementAt" method with parameter value = 1;
   Expected result: ArgumentOutOfRangeException is thrown.
 	
35. Sum all elements of a not empty list.
   Steps:
   - Create empty list of type Int32;
   - Add item with value 1, 2 sequentially using "Add" method;
   - Count all elements using foreach;
   - Sum all elements using foreach;
   Expected result: value of 3, 2 elements in the list.

36. Sum all elements of an empty list.
   Steps:
   - Create empty list of type Int32;
   - Count all elements using foreach;
   - Sum all elements using foreach;
   Expected result: value of 0, 0 elements in the list.